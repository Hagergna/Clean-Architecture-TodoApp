// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TodoApp.Persistance;

namespace TodoApp.Persistance.Migrations
{
    [DbContext(typeof(TodoAppDbContext))]
    [Migration("20200115061300_Category-Id-Added-For-SubCategory")]
    partial class CategoryIdAddedForSubCategory
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TodoApp.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("TodoApp.Domain.Entities.File", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content");

                    b.Property<DateTime>("Created");

                    b.Property<Guid>("SubCategoryId");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("TodoApp.Domain.Entities.Link", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content");

                    b.Property<DateTime>("Created");

                    b.Property<Guid>("SubCategoryId");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("Links");
                });

            modelBuilder.Entity("TodoApp.Domain.Entities.Note", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content");

                    b.Property<DateTime>("Created");

                    b.Property<Guid>("SubCategoryId");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("TodoApp.Domain.Entities.SubCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CategoryId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategories");
                });

            modelBuilder.Entity("TodoApp.Domain.Entities.Todo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content");

                    b.Property<DateTime>("Created");

                    b.Property<DateTime>("EndDate");

                    b.Property<DateTime>("StartDate");

                    b.Property<Guid>("SubCategoryId");

                    b.Property<string>("Title");

                    b.Property<int>("TodoStatus");

                    b.HasKey("Id");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("Todos");
                });

            modelBuilder.Entity("TodoApp.Domain.Entities.File", b =>
                {
                    b.HasOne("TodoApp.Domain.Entities.SubCategory", "SubCategory")
                        .WithMany("Files")
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TodoApp.Domain.Entities.Link", b =>
                {
                    b.HasOne("TodoApp.Domain.Entities.SubCategory", "SubCategory")
                        .WithMany("Linkes")
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TodoApp.Domain.Entities.Note", b =>
                {
                    b.HasOne("TodoApp.Domain.Entities.SubCategory", "SubCategory")
                        .WithMany("Notes")
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TodoApp.Domain.Entities.SubCategory", b =>
                {
                    b.HasOne("TodoApp.Domain.Entities.Category", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TodoApp.Domain.Entities.Todo", b =>
                {
                    b.HasOne("TodoApp.Domain.Entities.SubCategory", "SubCategory")
                        .WithMany("Todos")
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
